/* eslint-disable no-unused-vars */
import React, {useState} from 'react';
import {Link} from 'react-router-dom';
import { useLocation } from 'react-router-dom';
import Swal from 'sweetalert2';
import axios from 'axios';
import { useNavigate,  Navigate } from 'react-router-dom';

export const Resetpassword = () => {
    const [showPassword, setShowPassword] = useState(false);

    const togglePassword = () => {
      setShowPassword(prev => !prev);
    }

    // Estados para la contraseña y su confirmación
    const [password, setPassword] = useState('');
    const [password2, setPassword2] = useState('');
    
    // Estado para las condiciones
    const [conditions, setConditions] = useState({
        lengthValid: false,
        numberValid: false,
        specialValid: false,
        coincide: false, // Para verificar si las contraseñas coinciden
    });

    // Función para manejar los cambios en el input de la contraseña
    const handlePasswordChange = (e) => {
        const newPassword = e.target.value;
        setPassword(newPassword);

        // Verificar las condiciones de la contraseña
        const lengthValid = newPassword.length >= 8;
        const numberValid = /\d/.test(newPassword);
        const specialValid = /[!@#$%^&*(),.?":{}|<>]/.test(newPassword);

        // Actualizar las condiciones
        setConditions((prevConditions) => ({
        ...prevConditions, // Mantener las condiciones previas
        lengthValid,
        numberValid,
        specialValid,
        coincide: newPassword === password2, // Verificar si coincide con password2
        }));
    };

    // Función para manejar los cambios en el input de la confirmación de la contraseña
    const handlePasswordChange2 = (e) => {
        const newPassword2 = e.target.value;
        setPassword2(newPassword2);

        // Verificar si las contraseñas coinciden
        const coincide = newPassword2 === password;

        // Verificar las condiciones de la confirmación de la contraseña
        setConditions((prevConditions) => ({
        ...prevConditions, // Mantener las condiciones previas
        coincide,
        }));
    };

    // Función para obtener el SVG de check o error
    const getSVG = (type) => {
        if (type === 'check') {
        return (
          <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 10 10" fill="none">
          <path d="M5.00012 10C7.76155 10 10.0001 7.76142 10.0001 5C10.0001 2.23858 7.76155 0 5.00012 0C2.2387 0 0.00012207 2.23858 0.00012207 5C0.00012207 7.76142 2.2387 10 5.00012 10Z" fill="#4BC196"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M3.43889 7.43851L1.61023 5.4813C1.35987 5.21335 1.37424 4.78941 1.6422 4.53906C1.91015 4.2887 2.33408 4.30311 2.58444 4.57103L3.99499 6.08071L6.22771 3.99461C6.24779 3.97583 6.26877 3.95862 6.29046 3.9428L7.34042 2.96181C7.60838 2.71146 8.03235 2.72587 8.28267 2.99382C8.53302 3.26173 8.51861 3.68571 8.2507 3.93606L5.04385 6.93232L5.04042 6.92866L3.93113 7.96512L3.43889 7.43827V7.43851Z" fill="white"/>
          </svg>
        );
        } else if (type === 'error') {
        return (
          <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 10 10" fill="none">
          <path fill-rule="evenodd" clip-rule="evenodd" d="M5.00012 0C7.76111 0 10.0001 2.23902 10.0001 5C10.0001 7.76098 7.76111 10 5.00012 10C2.23914 10 0.00012207 7.76098 0.00012207 5C0.00012207 2.23902 2.23914 0 5.00012 0ZM2.47296 6.8098L4.28276 5L2.47296 3.1902C2.36914 3.08634 2.36914 2.91693 2.47296 2.81311L2.81323 2.47283C2.91705 2.36902 3.08646 2.36902 3.19032 2.47283L5.00012 4.28264L6.80993 2.47283C6.91378 2.36902 7.08319 2.36902 7.18701 2.47283L7.52729 2.81311C7.63111 2.91693 7.63111 3.08634 7.52729 3.1902L5.71748 5L7.52729 6.8098C7.63111 6.91366 7.63111 7.08307 7.52729 7.18689L7.18701 7.52717C7.08319 7.63098 6.91378 7.63098 6.80993 7.52717L5.00012 5.71736L3.19032 7.52717C3.08646 7.63098 2.91705 7.63098 2.81323 7.52717L2.47296 7.18689C2.36914 7.08307 2.36914 6.91366 2.47296 6.8098Z" fill="#CC3131"/>
        </svg>
        );
        }
        return null;
    };

    // Función para obtener el SVG de check o error
    const getSVGinput = (type) => {
        if (type === 'check') {
        return (
          <svg xmlns="http://www.w3.org/2000/svg" width="22" height="21" viewBox="0 0 22 21" fill="none">
            <path d="M15.5517 7.21887H14.0345V5.05321C14.0345 2.26683 11.6523 0 8.72413 0C5.79597 0 3.41379 2.26683 3.41379 5.05321V7.21887H1.89655C0.850869 7.21887 0 8.02854 0 9.02359V10.1136C0 10.313 0.169665 10.4746 0.37931 10.4746C0.588955 10.4746 0.75862 10.313 0.75862 10.1136V9.02359C0.75862 8.42648 1.26906 7.94076 1.89655 7.94076H15.5517C16.1792 7.94076 16.6896 8.42648 16.6896 9.02359V10.4674C16.6896 10.6667 16.8593 10.8283 17.069 10.8283C17.2786 10.8283 17.4483 10.6667 17.4483 10.4674V9.02359C17.4483 8.02854 16.5974 7.21887 15.5517 7.21887ZM4.17241 5.05321C4.17241 2.66496 6.21416 0.721887 8.72413 0.721887C11.2341 0.721887 13.2759 2.66496 13.2759 5.05321V7.21887H11.7586V5.05321C11.7586 3.46105 10.3973 2.16566 8.72413 2.16566C7.05096 2.16566 5.68965 3.46105 5.68965 5.05321V7.21887H4.17241V5.05321ZM11 7.21887H6.44827V5.05321C6.44827 3.85899 7.46915 2.88755 8.72413 2.88755C9.97912 2.88755 11 3.85899 11 5.05321V7.21887Z" fill="#222222"/>
            <path d="M0.387233 12.3615C0.601256 12.3615 0.774465 12.1999 0.774465 12.0006V11.3359C0.774465 11.1366 0.601256 10.975 0.387233 10.975C0.173209 10.975 0 11.1366 0 11.3359V12.0006C0 12.1999 0.173209 12.3615 0.387233 12.3615Z" fill="#222222"/>
            <path d="M17.069 18.7691C16.8593 18.7691 16.6896 18.9307 16.6896 19.13C16.6896 19.7272 16.1792 20.2129 15.5517 20.2129H1.89655C1.26906 20.2129 0.75862 19.7272 0.75862 19.13V13.3729C0.75862 13.1736 0.588955 13.012 0.37931 13.012C0.169665 13.012 0 13.1736 0 13.3729V19.13C0 20.1251 0.850869 20.9348 1.89655 20.9348H15.5517C16.5974 20.9348 17.4483 20.1251 17.4483 19.13C17.4483 18.9307 17.2786 18.7691 17.069 18.7691Z" fill="#222222"/>
            <path d="M20.4827 11.5502H4.931C4.0942 11.5502 3.41376 12.1979 3.41376 12.994V16.6035C3.41376 17.3996 4.0942 18.0472 4.931 18.0472H12.5739C12.7835 18.0472 12.9532 17.8856 12.9532 17.6863C12.9532 17.487 12.7835 17.3254 12.5739 17.3254H4.931C4.51281 17.3254 4.17238 17.0016 4.17238 16.6035V12.994C4.17238 12.5959 4.51281 12.2721 4.931 12.2721H20.4827C20.9009 12.2721 21.2413 12.5959 21.2413 12.994V16.6035C21.2413 17.0016 20.9009 17.3254 20.4827 17.3254H14.7182C14.5086 17.3254 14.3389 17.487 14.3389 17.6863C14.3389 17.8856 14.5086 18.0472 14.7182 18.0472H20.4827C21.3195 18.0472 22 17.3996 22 16.6035V12.994C22 12.1979 21.3195 11.5502 20.4827 11.5502Z" fill="#4BC196"/>
            <path d="M8.33106 14.0768C8.22587 13.9039 7.99362 13.8449 7.81284 13.9447L7.39647 14.1735V13.7159C7.39647 13.5166 7.22681 13.355 7.01716 13.355C6.80752 13.355 6.63785 13.5166 6.63785 13.7159V14.1735L6.22148 13.9447C6.03998 13.8449 5.80811 13.9039 5.70327 14.0768C5.59843 14.2494 5.66067 14.4702 5.84217 14.57L6.2585 14.7987L5.84217 15.0275C5.66067 15.1273 5.59843 15.3481 5.70327 15.5206C5.77363 15.6364 5.90108 15.7011 6.03221 15.7011C6.09665 15.7011 6.16186 15.6856 6.22148 15.6528L6.63785 15.424V15.8815C6.63785 16.0808 6.80752 16.2425 7.01716 16.2425C7.22681 16.2425 7.39647 16.0808 7.39647 15.8815V15.424L7.81284 15.6528C7.87247 15.6856 7.93767 15.7011 8.00212 15.7011C8.13325 15.7011 8.26066 15.6364 8.33106 15.5206C8.4359 15.3481 8.37365 15.1273 8.19215 15.0275L7.77582 14.7987L8.19215 14.57C8.37365 14.4702 8.4359 14.2494 8.33106 14.0768Z" fill="#4BC196"/>
            <path d="M12.1242 14.0768C12.019 13.9039 11.7868 13.8449 11.606 13.9447L11.1896 14.1735V13.7159C11.1896 13.5166 11.02 13.355 10.8103 13.355C10.6007 13.355 10.431 13.5166 10.431 13.7159V14.1735L10.0146 13.9447C9.83313 13.8449 9.60126 13.9039 9.49642 14.0768C9.39158 14.2494 9.45382 14.4702 9.63532 14.57L10.0517 14.7987L9.63532 15.0275C9.45382 15.1273 9.39158 15.3481 9.49642 15.5206C9.56678 15.6364 9.69423 15.7011 9.82536 15.7011C9.8898 15.7011 9.95501 15.6856 10.0146 15.6528L10.431 15.424V15.8815C10.431 16.0808 10.6007 16.2425 10.8103 16.2425C11.02 16.2425 11.1896 16.0808 11.1896 15.8815V15.424L11.606 15.6528C11.6656 15.6856 11.7308 15.7011 11.7953 15.7011C11.9264 15.7011 12.0538 15.6364 12.1242 15.5206C12.229 15.3481 12.1668 15.1273 11.9853 15.0275L11.569 14.7987L11.9853 14.57C12.1668 14.4702 12.229 14.2494 12.1242 14.0768Z" fill="#4BC196"/>
            <path d="M14.9827 15.8816V15.424L15.3991 15.6528C15.4587 15.6856 15.5239 15.7011 15.5884 15.7011C15.7195 15.7011 15.8469 15.6365 15.9173 15.5207C16.0221 15.3481 15.9599 15.1273 15.7784 15.0275L15.3621 14.7988L15.7784 14.57C15.9599 14.4702 16.0221 14.2494 15.9173 14.0769C15.8125 13.904 15.5799 13.8449 15.3991 13.9447L14.9827 14.1735V13.716C14.9827 13.5167 14.8131 13.355 14.6034 13.355C14.3938 13.355 14.2241 13.5167 14.2241 13.716V14.1735L13.8077 13.9447C13.6262 13.8449 13.3944 13.904 13.2895 14.0769C13.1847 14.2494 13.2469 14.4702 13.4284 14.57L13.8447 14.7988L13.4284 15.0275C13.2469 15.1273 13.1847 15.3481 13.2895 15.5207C13.3599 15.6365 13.4873 15.7011 13.6185 15.7011C13.6829 15.7011 13.7481 15.6856 13.8077 15.6528L14.2241 15.424V15.8816C14.2241 16.0809 14.3938 16.2425 14.6034 16.2425C14.8131 16.2425 14.9827 16.0809 14.9827 15.8816Z" fill="#4BC196"/>
            <path d="M17.0827 15.5206C17.153 15.6364 17.2805 15.7011 17.4116 15.7011C17.476 15.7011 17.5413 15.6856 17.6009 15.6528L18.0172 15.424V15.8815C18.0172 16.0808 18.1869 16.2425 18.3966 16.2425C18.6062 16.2425 18.7759 16.0808 18.7759 15.8815V15.424L19.1922 15.6528C19.2519 15.6856 19.3171 15.7011 19.3815 15.7011C19.5126 15.7011 19.6401 15.6364 19.7105 15.5206C19.8153 15.3481 19.753 15.1273 19.5715 15.0275L19.1552 14.7987L19.5715 14.57C19.753 14.4702 19.8153 14.2494 19.7105 14.0768C19.6053 13.9039 19.373 13.8449 19.1922 13.9447L18.7759 14.1735V13.7159C18.7759 13.5166 18.6062 13.355 18.3966 13.355C18.1869 13.355 18.0172 13.5166 18.0172 13.7159V14.1735L17.6009 13.9447C17.4194 13.8449 17.1875 13.9039 17.0827 14.0768C16.9778 14.2494 17.0401 14.4702 17.2216 14.57L17.6379 14.7987L17.2216 15.0275C17.0401 15.1273 16.9778 15.3481 17.0827 15.5206Z" fill="#4BC196"/>
          </svg>
        );
        } else if (type === 'error') {
        return (
          <svg xmlns="http://www.w3.org/2000/svg" width="22" height="21" viewBox="0 0 22 21" fill="none">
            <path d="M15.5517 7.21887H14.0345V5.05321C14.0345 2.26683 11.6523 0 8.72413 0C5.79597 0 3.41379 2.26683 3.41379 5.05321V7.21887H1.89655C0.850869 7.21887 0 8.02854 0 9.02359V10.1136C0 10.313 0.169665 10.4746 0.37931 10.4746C0.588955 10.4746 0.75862 10.313 0.75862 10.1136V9.02359C0.75862 8.42648 1.26906 7.94076 1.89655 7.94076H15.5517C16.1792 7.94076 16.6896 8.42648 16.6896 9.02359V10.4674C16.6896 10.6667 16.8593 10.8283 17.069 10.8283C17.2786 10.8283 17.4483 10.6667 17.4483 10.4674V9.02359C17.4483 8.02854 16.5974 7.21887 15.5517 7.21887ZM4.17241 5.05321C4.17241 2.66496 6.21416 0.721887 8.72413 0.721887C11.2341 0.721887 13.2759 2.66496 13.2759 5.05321V7.21887H11.7586V5.05321C11.7586 3.46105 10.3973 2.16566 8.72413 2.16566C7.05096 2.16566 5.68965 3.46105 5.68965 5.05321V7.21887H4.17241V5.05321ZM11 7.21887H6.44827V5.05321C6.44827 3.85899 7.46915 2.88755 8.72413 2.88755C9.97912 2.88755 11 3.85899 11 5.05321V7.21887Z" fill="#222222"/>
            <path d="M0.387233 12.3615C0.601256 12.3615 0.774465 12.1999 0.774465 12.0006V11.336C0.774465 11.1366 0.601256 10.975 0.387233 10.975C0.173209 10.975 0 11.1366 0 11.336V12.0006C0 12.1999 0.173209 12.3615 0.387233 12.3615Z" fill="#222222"/>
            <path d="M17.069 18.7691C16.8593 18.7691 16.6896 18.9307 16.6896 19.13C16.6896 19.7272 16.1792 20.2129 15.5517 20.2129H1.89655C1.26906 20.2129 0.75862 19.7272 0.75862 19.13V13.3729C0.75862 13.1736 0.588955 13.012 0.37931 13.012C0.169665 13.012 0 13.1736 0 13.3729V19.13C0 20.1251 0.850869 20.9348 1.89655 20.9348H15.5517C16.5974 20.9348 17.4483 20.1251 17.4483 19.13C17.4483 18.9307 17.2786 18.7691 17.069 18.7691Z" fill="#222222"/>
            <path d="M20.4827 11.5502H4.931C4.0942 11.5502 3.41376 12.1979 3.41376 12.994V16.6035C3.41376 17.3996 4.0942 18.0472 4.931 18.0472H12.5739C12.7835 18.0472 12.9532 17.8856 12.9532 17.6863C12.9532 17.487 12.7835 17.3254 12.5739 17.3254H4.931C4.51281 17.3254 4.17238 17.0016 4.17238 16.6035V12.994C4.17238 12.5959 4.51281 12.2721 4.931 12.2721H20.4827C20.9009 12.2721 21.2413 12.5959 21.2413 12.994V16.6035C21.2413 17.0016 20.9009 17.3254 20.4827 17.3254H14.7182C14.5086 17.3254 14.3389 17.487 14.3389 17.6863C14.3389 17.8856 14.5086 18.0472 14.7182 18.0472H20.4827C21.3195 18.0472 22 17.3996 22 16.6035V12.994C22 12.1979 21.3195 11.5502 20.4827 11.5502Z" fill="#CC3131"/>
            <path d="M8.33106 14.0768C8.22587 13.9039 7.99362 13.8449 7.81284 13.9447L7.39647 14.1735V13.7159C7.39647 13.5166 7.22681 13.355 7.01716 13.355C6.80752 13.355 6.63785 13.5166 6.63785 13.7159V14.1735L6.22148 13.9447C6.03998 13.8449 5.80811 13.9039 5.70327 14.0768C5.59843 14.2494 5.66067 14.4702 5.84217 14.57L6.2585 14.7987L5.84217 15.0275C5.66067 15.1273 5.59843 15.3481 5.70327 15.5206C5.77363 15.6364 5.90108 15.7011 6.03221 15.7011C6.09665 15.7011 6.16186 15.6856 6.22148 15.6528L6.63785 15.424V15.8815C6.63785 16.0808 6.80752 16.2425 7.01716 16.2425C7.22681 16.2425 7.39647 16.0808 7.39647 15.8815V15.424L7.81284 15.6528C7.87247 15.6856 7.93767 15.7011 8.00212 15.7011C8.13325 15.7011 8.26066 15.6364 8.33106 15.5206C8.4359 15.3481 8.37365 15.1273 8.19215 15.0275L7.77582 14.7987L8.19215 14.57C8.37365 14.4702 8.4359 14.2494 8.33106 14.0768Z" fill="#CC3131"/>
            <path d="M12.1242 14.0768C12.019 13.9039 11.7868 13.8449 11.606 13.9447L11.1896 14.1735V13.7159C11.1896 13.5166 11.02 13.355 10.8103 13.355C10.6007 13.355 10.431 13.5166 10.431 13.7159V14.1735L10.0146 13.9447C9.83313 13.8449 9.60126 13.9039 9.49642 14.0768C9.39158 14.2494 9.45382 14.4702 9.63532 14.57L10.0517 14.7987L9.63532 15.0275C9.45382 15.1273 9.39158 15.3481 9.49642 15.5206C9.56678 15.6364 9.69423 15.7011 9.82536 15.7011C9.8898 15.7011 9.95501 15.6856 10.0146 15.6528L10.431 15.424V15.8815C10.431 16.0808 10.6007 16.2425 10.8103 16.2425C11.02 16.2425 11.1896 16.0808 11.1896 15.8815V15.424L11.606 15.6528C11.6656 15.6856 11.7308 15.7011 11.7953 15.7011C11.9264 15.7011 12.0538 15.6364 12.1242 15.5206C12.229 15.3481 12.1668 15.1273 11.9853 15.0275L11.569 14.7987L11.9853 14.57C12.1668 14.4702 12.229 14.2494 12.1242 14.0768Z" fill="#CC3131"/>
            <path d="M14.9827 15.8816V15.424L15.3991 15.6528C15.4587 15.6856 15.5239 15.7011 15.5884 15.7011C15.7195 15.7011 15.8469 15.6365 15.9173 15.5207C16.0221 15.3481 15.9599 15.1273 15.7784 15.0275L15.3621 14.7988L15.7784 14.57C15.9599 14.4702 16.0221 14.2494 15.9173 14.0769C15.8125 13.904 15.5799 13.8449 15.3991 13.9447L14.9827 14.1735V13.716C14.9827 13.5167 14.8131 13.355 14.6034 13.355C14.3938 13.355 14.2241 13.5167 14.2241 13.716V14.1735L13.8077 13.9447C13.6262 13.8449 13.3944 13.904 13.2895 14.0769C13.1847 14.2494 13.2469 14.4702 13.4284 14.57L13.8447 14.7988L13.4284 15.0275C13.2469 15.1273 13.1847 15.3481 13.2895 15.5207C13.3599 15.6365 13.4873 15.7011 13.6185 15.7011C13.6829 15.7011 13.7481 15.6856 13.8077 15.6528L14.2241 15.424V15.8816C14.2241 16.0809 14.3938 16.2425 14.6034 16.2425C14.8131 16.2425 14.9827 16.0809 14.9827 15.8816Z" fill="#CC3131"/>
            <path d="M17.0827 15.5206C17.153 15.6364 17.2805 15.7011 17.4116 15.7011C17.476 15.7011 17.5413 15.6856 17.6009 15.6528L18.0172 15.424V15.8815C18.0172 16.0808 18.1869 16.2425 18.3966 16.2425C18.6062 16.2425 18.7759 16.0808 18.7759 15.8815V15.424L19.1922 15.6528C19.2519 15.6856 19.3171 15.7011 19.3815 15.7011C19.5126 15.7011 19.6401 15.6364 19.7105 15.5206C19.8153 15.3481 19.753 15.1273 19.5715 15.0275L19.1552 14.7987L19.5715 14.57C19.753 14.4702 19.8153 14.2494 19.7105 14.0768C19.6053 13.9039 19.373 13.8449 19.1922 13.9447L18.7759 14.1735V13.7159C18.7759 13.5166 18.6062 13.355 18.3966 13.355C18.1869 13.355 18.0172 13.5166 18.0172 13.7159V14.1735L17.6009 13.9447C17.4194 13.8449 17.1875 13.9039 17.0827 14.0768C16.9778 14.2494 17.0401 14.4702 17.2216 14.57L17.6379 14.7987L17.2216 15.0275C17.0401 15.1273 16.9778 15.3481 17.0827 15.5206Z" fill="#CC3131"/>
          </svg>
        );
        }
        return null;
    };
  
  
    const navigate = useNavigate();
  
    const location = useLocation();
  
    // Crear un objeto URLSearchParams con la cadena de búsqueda
    const queryParams = new URLSearchParams(location.search);
  
    // Obtener el valor del parámetro 'token'
    const token = queryParams.get('token');
  
    // Función para manejar el envío del formulario
    const handleSubmit = async (e) => {
  
      e.preventDefault();
  
      if(password == '' || password2 == '') {
        Swal.fire({
          title: 'Error',
          text: `Por favor llena todos los campos`,
          icon: 'warning',
          confirmButtonText: 'Ok'
        })
        return;
      }
  
      if(password !== password2) {
        Swal.fire({
          title: 'Error',
          text: `Contraseñas no coinciden`,
          icon: 'error',
          confirmButtonText: 'Ok'
        })
        return;
      }
      
      try {
  
        const response = await axios.post('auth/reset-password',
          {
            token: token,
            newPassword: password,
          });
  
          Swal.fire({
            title: 'Operacion Exitosa',
            text: `Contraseña restablecida exitosamente`,
            icon: 'success',
            confirmButtonText: 'Ok'
          })
  
          navigate('/');
      }
      catch(error){
        Swal.fire({
          title: 'Error',
          text: `Ha ocurido un error ${error}`,
          icon: 'error',
          confirmButtonText: 'Ok'
        })
      }
    };

  return (
    <div className='div-reset'>
        <img src="/images/logo.png" className='logo-reset' />

        <div className='div-central-reset'>

            <div className='header-form-reset'>
                <h3 className='titulos negro'>Reestablecer Contraseña</h3>
                <p className='textos gris'>Tu contraseña será enviada a tu correo una vez sea reestablecida</p>
            </div>

            {/*contenido form*/}
              <div className='div-contenido-reset'>

                <form className='form-reset' onSubmit={handleSubmit}>

                  {/*Nueva contraseña*/}
                    <label className='textos-grandes negro' htmlFor="">Contraseña Nueva</label>
                    <div className='div-input-reset'>
                          {conditions.lengthValid && conditions.numberValid && conditions.specialValid ? (<>{getSVGinput('check')}</>) : (<>{getSVGinput('error')}</>)}

                            <input type={showPassword ? 'text' : 'password'} className='input2-reset' placeholder='Ingresa tu contraseña' name='password' value={password} onChange={handlePasswordChange}/>

                            <svg xmlns="http://www.w3.org/2000/svg" width="17" height="16" viewBox="0 0 17 16" fill="none" className='svg-registro' onClick={togglePassword}>
                              <path d="M4.93188 0H12.0678C13.2433 0 14.3706 0.466961 15.2018 1.29816C16.033 2.12935 16.5 3.2567 16.5 4.43219V11.5681C16.5 12.7435 16.0331 13.8708 15.2019 14.7019C14.3708 15.5331 13.2435 16 12.0681 16H4.93188C3.75647 16 2.6292 15.5331 1.79807 14.7019C0.966928 13.8708 0.5 12.7435 0.5 11.5681L0.5 4.43188C0.5 3.25647 0.966928 2.1292 1.79807 1.29807C2.6292 0.466928 3.75647 0 4.93188 0Z" fill="#574C9A"/>
                              <path d="M12.0681 1.25H4.93188C3.17457 1.25 1.75 2.67457 1.75 4.43188V11.5681C1.75 13.3254 3.17457 14.75 4.93188 14.75H12.0681C13.8254 14.75 15.25 13.3254 15.25 11.5681V4.43188C15.25 2.67457 13.8254 1.25 12.0681 1.25Z" fill="white"/>
                              <path d="M13.3903 7.15625C13.0028 6.67843 12.3722 5.985 11.5687 5.39437C10.54 4.63843 9.50623 4.255 8.49998 4.255C7.49373 4.255 6.45998 4.63843 5.43123 5.39437C4.62779 5.985 3.99717 6.67843 3.60967 7.15625C3.41736 7.39505 3.3125 7.69245 3.3125 7.99906C3.3125 8.30567 3.41736 8.60307 3.60967 8.84187C3.99717 9.31968 4.62779 10.0131 5.43123 10.6037C6.45998 11.3597 7.49373 11.7431 8.49998 11.7431C9.50623 11.7431 10.54 11.3597 11.5687 10.6037C12.3722 10.0131 13.0028 9.31968 13.3903 8.84187C13.5826 8.60307 13.6875 8.30567 13.6875 7.99906C13.6875 7.69245 13.5826 7.39505 13.3903 7.15625ZM12.3631 8.00875C11.775 8.73375 10.2212 10.4203 8.49998 10.4203C6.77873 10.4203 5.22498 8.73281 4.63686 8.00875C4.63457 8.00604 4.63331 8.00261 4.63331 7.99906C4.63331 7.99551 4.63457 7.99208 4.63686 7.98937C5.22498 7.26437 6.77873 5.57781 8.49998 5.57781C10.2212 5.57781 11.775 7.26531 12.3631 7.98937C12.3657 7.99214 12.3671 7.99577 12.3671 7.99953C12.3671 8.00329 12.3657 8.00692 12.3631 8.00968V8.00875Z" fill="#689FD5"/>
                              <path d="M8.50006 9.09907C9.10706 9.09907 9.59913 8.607 9.59913 8C9.59913 7.39301 9.10706 6.90094 8.50006 6.90094C7.89307 6.90094 7.401 7.39301 7.401 8C7.401 8.607 7.89307 9.09907 8.50006 9.09907Z" fill="#689FD5"/>
                            </svg>
                    </div>
                  {/*Nueva contraseña*/}

                  <div className='div-link-reset-register'>
                    <div>
                        <p className={`p-reset textos-peques ${conditions.lengthValid ? 'valid' : 'invalid'}`}>
                            {conditions.lengthValid ? (<>{getSVG('check')} 8 caracteres</>) : (<>{getSVG('error')} 8 caracteres</>)}
                        </p>
                    </div>
                    <div>
                        <p className={`p-reset textos-peques ${conditions.numberValid ? 'valid' : 'invalid'}`}>
                        {conditions.numberValid ? (<>{getSVG('check')} Debe contener mínimo un número</>) : (<>{getSVG('error')} Debe contener mínimo un número</>)}
                        </p>
                    </div>
                    <div>
                        <p className={`p-reset textos-peques ${conditions.specialValid ? 'valid' : 'invalid'}`}>
                        {conditions.specialValid ? (<>{getSVG('check')} Debe contener mínimo un carácter especial</>) : (<>{getSVG('error')} Debe contener mínimo un carácter especial</>)}
                        </p>
                    </div>
                    

                    

                  </div>

                  {/*confirmar contraseña*/}
                  <label className='textos-grandes negro' htmlFor="">Confirma tu contraseña</label>
                    <div className='div-input-reset'>
                          {conditions.coincide ? (<>{getSVGinput('check')}</>) : (<>{getSVGinput('error')}</>)}
                            <input type={showPassword ? 'text' : 'password'} className='input2-reset-2' placeholder='Ingresa tu contraseña' name='password2' value={password2} onChange={handlePasswordChange2}/>

                            <svg xmlns="http://www.w3.org/2000/svg" width="17" height="16" viewBox="0 0 17 16" fill="none" className='svg-registro' onClick={togglePassword}>
                              <path d="M4.93188 0H12.0678C13.2433 0 14.3706 0.466961 15.2018 1.29816C16.033 2.12935 16.5 3.2567 16.5 4.43219V11.5681C16.5 12.7435 16.0331 13.8708 15.2019 14.7019C14.3708 15.5331 13.2435 16 12.0681 16H4.93188C3.75647 16 2.6292 15.5331 1.79807 14.7019C0.966928 13.8708 0.5 12.7435 0.5 11.5681L0.5 4.43188C0.5 3.25647 0.966928 2.1292 1.79807 1.29807C2.6292 0.466928 3.75647 0 4.93188 0Z" fill="#574C9A"/>
                              <path d="M12.0681 1.25H4.93188C3.17457 1.25 1.75 2.67457 1.75 4.43188V11.5681C1.75 13.3254 3.17457 14.75 4.93188 14.75H12.0681C13.8254 14.75 15.25 13.3254 15.25 11.5681V4.43188C15.25 2.67457 13.8254 1.25 12.0681 1.25Z" fill="white"/>
                              <path d="M13.3903 7.15625C13.0028 6.67843 12.3722 5.985 11.5687 5.39437C10.54 4.63843 9.50623 4.255 8.49998 4.255C7.49373 4.255 6.45998 4.63843 5.43123 5.39437C4.62779 5.985 3.99717 6.67843 3.60967 7.15625C3.41736 7.39505 3.3125 7.69245 3.3125 7.99906C3.3125 8.30567 3.41736 8.60307 3.60967 8.84187C3.99717 9.31968 4.62779 10.0131 5.43123 10.6037C6.45998 11.3597 7.49373 11.7431 8.49998 11.7431C9.50623 11.7431 10.54 11.3597 11.5687 10.6037C12.3722 10.0131 13.0028 9.31968 13.3903 8.84187C13.5826 8.60307 13.6875 8.30567 13.6875 7.99906C13.6875 7.69245 13.5826 7.39505 13.3903 7.15625ZM12.3631 8.00875C11.775 8.73375 10.2212 10.4203 8.49998 10.4203C6.77873 10.4203 5.22498 8.73281 4.63686 8.00875C4.63457 8.00604 4.63331 8.00261 4.63331 7.99906C4.63331 7.99551 4.63457 7.99208 4.63686 7.98937C5.22498 7.26437 6.77873 5.57781 8.49998 5.57781C10.2212 5.57781 11.775 7.26531 12.3631 7.98937C12.3657 7.99214 12.3671 7.99577 12.3671 7.99953C12.3671 8.00329 12.3657 8.00692 12.3631 8.00968V8.00875Z" fill="#689FD5"/>
                              <path d="M8.50006 9.09907C9.10706 9.09907 9.59913 8.607 9.59913 8C9.59913 7.39301 9.10706 6.90094 8.50006 6.90094C7.89307 6.90094 7.401 7.39301 7.401 8C7.401 8.607 7.89307 9.09907 8.50006 9.09907Z" fill="#689FD5"/>
                            </svg>
                    </div>
                    <div className='div-link-reset-register'>
                        <p className={`p-reset textos-peques ${conditions.coincide ? 'valid' : 'invalid'}`}>
                            {conditions.coincide ? (<>{getSVG('check')} Tu contraseña coincide</>) : (<>{getSVG('error')} Tu contraseña coincide</>)}
                        </p>
                    </div>
                  {/*confirmar contraseña*/}

                  
                  <div className='div-link-reset'>

                  <button className='w-[60%] p-2 text-center bg-[#5A5DA6] textos-grandes blanco mt-5 p-2 rounded-md'>Restablecer contraseña</button>

                    <Link to="/" className='w-[40%] p-2 text-center border border-[#6B6B6B] textos-grandes gris mt-5 p-2 rounded-md'>
                        Cancelar
                    </Link>
                  </div>
                </form>

              </div>
            {/*end::contenido form*/}
        </div>
    </div>
  )
}

export default Resetpassword;
